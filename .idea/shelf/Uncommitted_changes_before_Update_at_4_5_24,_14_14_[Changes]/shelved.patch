Index: src/main/java/EXPERIMENTO/MAIN.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package EXPERIMENTO;\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.*;\nimport java.util.ArrayList;\nimport java.util.Optional;\n\npublic class MAIN extends JFrame implements ActionListener {\n\n    public JTextField nombreField;\n    public JTextField cantidadField;\n    public JTextArea detallesArea;\n    public JButton agregarCultivoButton;\n    public JButton eliminarCultivoButton;\n    public JButton verNombresButton;\n    public JButton verDetallesButton;\n    public JButton guardarButton;\n    public JButton guardarComoButton;\n    public JButton abrirButton;\n    public JLabel nombreLabel;\n    public JLabel cantidadLabel;\n    public experimentos experimento;\n\n    public MAIN() {\n        setTitle(\"Experimento con bacterias\");\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        setSize(600, 400);\n        setLayout(new BorderLayout());\n\n        // Panel de información\n        JPanel informacionPanel = new JPanel();\n        informacionPanel.setLayout(new GridLayout(4, 2));\n        nombreLabel = new JLabel(\"Nombre: \");\n        cantidadLabel = new JLabel(\"Cantidad: \");\n        nombreField = new JTextField();\n        cantidadField = new JTextField();\n        agregarCultivoButton = new JButton(\"Agregar cultivo\");\n        agregarCultivoButton.addActionListener(this);\n        eliminarCultivoButton = new JButton(\"Eliminar cultivo\");\n        eliminarCultivoButton.addActionListener(this);\n        verNombresButton = new JButton(\"Ver nombres de cultivos\");\n        verNombresButton.addActionListener(this);\n        verDetallesButton = new JButton(\"Ver detalles de cultivo\");\n        verDetallesButton.addActionListener(this);\n        informacionPanel.add(nombreLabel);\n        informacionPanel.add(nombreField);\n        informacionPanel.add(cantidadLabel);\n        informacionPanel.add(cantidadField);\n        informacionPanel.add(agregarCultivoButton);\n        informacionPanel.add(eliminarCultivoButton);\n        informacionPanel.add(verNombresButton);\n        informacionPanel.add(verDetallesButton);\n\n        // Panel de detalles\n        detallesArea = new JTextArea();\n        JScrollPane detallesScroll = new JScrollPane(detallesArea);\n\n        // Panel de botones de archivo\n        JPanel botonesArchivoPanel = new JPanel();\n        botonesArchivoPanel.setLayout(new GridLayout(1, 3));\n        guardarButton = new JButton(\"Guardar experimento\");\n        guardarButton.addActionListener(this);\n        guardarComoButton = new JButton(\"Guardar como\");\n        guardarComoButton.addActionListener(this);\n        abrirButton = new JButton(\"Abrir experimento\");\n        abrirButton.addActionListener(this);\n        botonesArchivoPanel.add(guardarButton);\n        botonesArchivoPanel.add(guardarComoButton);\n        botonesArchivoPanel.add(abrirButton);\n\n        // Agregar todos los paneles al JFrame\n        add(informacionPanel, BorderLayout.NORTH);\n        add(detallesScroll, BorderLayout.CENTER);\n        add(botonesArchivoPanel, BorderLayout.SOUTH);\n    }\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\n        try {\n            if (e.getSource() == agregarCultivoButton) {\n                if (!cantidadField.getText().isEmpty()) {\n                    agregarCultivoDeBacterias(nombreField.getText(), Integer.parseInt(cantidadField.getText()));\n                } else {\n                    detallesArea.append(\"Debe especificar una cantidad para agregar un cultivo de bacterias.\\n\");\n                }\n            } else if (e.getSource() == eliminarCultivoButton) {\n                eliminarCultivoDeBacterias(nombreField.getText());\n            } else if (e.getSource() == verNombresButton) {\n                verNombresDeCultivosDeBacterias();\n            } else if (e.getSource() == verDetallesButton) {\n                verInformacionDetalladaDeCultivoDeBacterias(nombreField.getText());\n            } else if (e.getSource() == guardarButton) {\n                guardarExperimento();\n            } else if (e.getSource() == guardarComoButton) {\n                guardarExperimentoComo();\n            } else if (e.getSource() == abrirButton) {\n                abrirExperimento();\n            }\n        } catch (IOException | ClassNotFoundException ex) {\n            // Handle the exception appropriately\n            ex.printStackTrace();\n        }\n    }\n\n    public void abrirExperimento() throws IOException, ClassNotFoundException {\n        JFileChooser fileChooser = new JFileChooser();\n        int returnValue = fileChooser.showOpenDialog(this);\n        if (returnValue == JFileChooser.APPROVE_OPTION) {\n            File file = fileChooser.getSelectedFile();\n            setExperimento(experimentos.abrirExperimento(file.getAbsolutePath()));\n            detallesArea.append(\"Experimento cargado desde: \" + file.getAbsolutePath() + \"\\n\");\n        }\n    }\n\n    public void guardarExperimento() throws IOException {\n        String ruta = \"experimento.ser\"; // Ruta predeterminada o lógica interna para determinar la ruta de guardado\n        guardarExperimento(ruta);\n    }\n    public void guardarExperimento(String ruta) throws IOException {\n        // Implementación del método para guardar el experimento en la ruta proporcionada\n    }\n\n\n    public void guardarExperimentoComo() throws IOException {\n        if (getExperimento() != null) {\n            JFileChooser fileChooser = new JFileChooser();\n            int returnValue = fileChooser.showSaveDialog(this);\n            if (returnValue == JFileChooser.APPROVE_OPTION) {\n                File file = fileChooser.getSelectedFile();\n                if (!file.getAbsolutePath().endsWith(\".ser\")) {\n                    file = new File(file.getAbsolutePath() + \".ser\");\n                }\n                getExperimento().guardarExperimento(    file.getAbsolutePath());\n                detallesArea.append(\"Experimento guardado en: \" + file.getAbsolutePath() + \"\\n\");\n            }\n        } else {\n            detallesArea.append(\"No hay ningún experimento para guardar\\n\");\n        }\n    }\n\n    public void verInformacionDetalladaDeCultivoDeBacterias(String nombre) {\n        Optional<CultivoDeBacterias> cultivoOptional = getExperimento().obtenerDetallesCultivo(nombre);\n        if (cultivoOptional.isPresent()) {\n            CultivoDeBacterias cultivo = cultivoOptional.get();\n            detallesArea.append(\"Nombre: \" + cultivo.getNombre() + \"\\n\");\n            detallesArea.append(\"Cantidad: \" + cultivo.getCantidad() + \"\\n\");\n            detallesArea.append(\"Características de bacterias:\\n\");\n            detallesArea.append(\" - Colonia: \" + cultivo.getBacterias().getColonia() + \"\\n\");\n            detallesArea.append(\" - Genotipo: \" + cultivo.getBacterias().getGenotipo() + \"\\n\");\n            detallesArea.append(\" - Plásmidos: \" + cultivo.getBacterias().getPlasmidos() + \"\\n\");\n        } else {\n            detallesArea.append(\"No se encontró el cultivo de bacterias: \" + nombre + \"\\n\");\n        }\n    }\n\n    public void verNombresDeCultivosDeBacterias() {\n        getExperimento().mostrarCultivosDeBacterias();\n    }\n\n    public void eliminarCultivoDeBacterias(String nombre) {\n        Optional<CultivoDeBacterias> cultivoOptional = getExperimento().obtenerDetallesCultivo(nombre);\n        if (cultivoOptional.isPresent()) {\n            getExperimento().eliminarCultivoDeBacterias(cultivoOptional.get());\n            detallesArea.append(\"Cultivo de bacterias eliminado: \" + nombre + \"\\n\");\n        } else {\n            detallesArea.append(\"No se encontró el cultivo de bacterias: \" + nombre + \"\\n\");\n        }\n    }\n\n    public void agregarCultivoDeBacterias(String nombre, int cantidad) {\n        Bacterias bacterias = new Bacterias(\"Colonia\", \"Genotipo\", new ArrayList<>());\n        CultivoDeBacterias nuevoCultivo = new CultivoDeBacterias(nombre, cantidad, bacterias);\n        getExperimento().agregarCultivoDeBacterias(nuevoCultivo);\n        detallesArea.append(\"Cultivo de bacterias agregado: \" + nombre + \"\\n\");\n    }\n\n    public void setExperimento(experimentos experimento) {\n        this.experimento = experimento;\n    }\n\n    public experimentos getExperimento() {\n        if (experimento == null) {\n            experimento = new experimentos();\n        }\n        return this.experimento;\n    }\n\n    public static void main(String[] args) {\n        MAIN main = new MAIN();\n        main.setVisible(true);\n    }\n}\n\nclass Bacterias implements Serializable {\n    private String colonia;\n    private String genotipo;\n    private ArrayList<String> plasmidos;\n\n    public Bacterias(String colonia, String genotipo, ArrayList<String> plasmidos) {\n        this.colonia = colonia;\n        this.genotipo = genotipo;\n        this.plasmidos = plasmidos;\n    }\n\n    public String getColonia() {\n        return colonia;\n    }\n\n    public void setColonia(String colonia) {\n        this.colonia = colonia;\n    }\n\n    public String getGenotipo() {\n        return genotipo;\n    }\n\n    public void setGenotipo(String genotipo) {\n        this.genotipo = genotipo;\n    }\n\n    public ArrayList<String> getPlasmidos() {\n        return plasmidos;\n    }\n\n    public void setPlasmidos(ArrayList<String> plasmidos) {\n        this.plasmidos = plasmidos;\n    }\n}\n\nclass CultivoDeBacterias implements Serializable {\n    private String nombre;\n    private int cantidad;\n    private Bacterias bacterias;\n\n    public CultivoDeBacterias(String nombre, int cantidad, Bacterias bacterias) {\n        this.nombre = nombre;\n        this.cantidad = cantidad;\n        this.bacterias = bacterias;\n    }\n\n    public String getNombre() {\n        return nombre;\n    }\n\n    public void setNombre(String nombre) {\n        this.nombre = nombre;\n    }\n\n    public int getCantidad() {\n        return cantidad;\n    }\n\n    public void setCantidad(int cantidad) {\n        this.cantidad = cantidad;\n    }\n\n    public Bacterias getBacterias() {\n        return bacterias;\n    }\n\n    public void setBacterias(Bacterias bacterias) {\n        this.bacterias = bacterias;\n    }\n\n    public void isEmpty () {\n    }\n}\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/EXPERIMENTO/MAIN.java b/src/main/java/EXPERIMENTO/MAIN.java
--- a/src/main/java/EXPERIMENTO/MAIN.java	(revision 0fd76e139ec2a8d9681dbe30f2ff34a8b5353d70)
+++ b/src/main/java/EXPERIMENTO/MAIN.java	(date 1714752378749)
@@ -23,6 +23,7 @@
     public JLabel nombreLabel;
     public JLabel cantidadLabel;
     public experimentos experimento;
+    private int cantidad;
 
     public MAIN() {
         setTitle("Experimento con bacterias");
@@ -115,6 +116,11 @@
         }
     }
 
+    public void simularCrecimiento(double tasaCrecimiento) {
+        this.cantidad = DetallesPoblacionBacterias.crecimientoBacterias(this.cantidad, tasaCrecimiento);
+    }
+
+
     public void guardarExperimento() throws IOException {
         String ruta = "experimento.ser"; // Ruta predeterminada o lógica interna para determinar la ruta de guardado
         guardarExperimento(ruta);
@@ -177,6 +183,7 @@
         detallesArea.append("Cultivo de bacterias agregado: " + nombre + "\n");
     }
 
+
     public void setExperimento(experimentos experimento) {
         this.experimento = experimento;
     }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"c976f18b-89ac-4b43-8fc8-42e3147c8413\" name=\"Changes\" comment=\"sigue sin funcionar\">\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/EXPERIMENTO/experimentos.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <favorite-branches>\n      <branch-storage>\n        <map>\n          <entry type=\"LOCAL\">\n            <value>\n              <list>\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"adriana\" />\n              </list>\n            </value>\n          </entry>\n        </map>\n      </branch-storage>\n    </favorite-branches>\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\n      <list>\n        <option value=\"Gmongtor &lt;146821781+gmongtor@users.noreply.github.com&gt;\" />\n        <option value=\"vitaliy-pg &lt;aljndrvt@myuax.com&gt;\" />\n      </list>\n    </option>\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"sebas\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n        &quot;lastFilter&quot;: {\n        &quot;state&quot;: &quot;OPEN&quot;,\n        &quot;assignee&quot;: &quot;Gmongtor&quot;\n        }\n        }</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n        &quot;selectedUrlAndAccountId&quot;: {\n        &quot;url&quot;: &quot;https://github.com/adrianarmm/PartedelaPractica1.git&quot;,\n        &quot;accountId&quot;: &quot;e5404a22-18ea-46f9-bf81-f500d9a41b5e&quot;\n        }\n        }</component>\n  <component name=\"ProjectColorInfo\">{\n        &quot;associatedIndex&quot;: 1\n        }</component>\n  <component name=\"ProjectId\" id=\"2fVXNMh3YWyvBceWxrYSRJGQSr4\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.BacterialCultureExperimentManager.executor&quot;: &quot;Run&quot;,\n    &quot;Application.CultivoDeBacterias.executor&quot;: &quot;Run&quot;,\n    &quot;Application.DetallesPoblacionBacterias.executor&quot;: &quot;Run&quot;,\n    &quot;Application.EXMA.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Experimento.executor&quot;: &quot;Run&quot;,\n    &quot;Application.ExperimentoManageer.executor&quot;: &quot;Run&quot;,\n    &quot;Application.ExperimentoManager.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Experimentos.executor&quot;: &quot;Run&quot;,\n    &quot;Application.GEGUI.executor&quot;: &quot;Run&quot;,\n    &quot;Application.GuardarArchivos.executor&quot;: &quot;Run&quot;,\n    &quot;Application.HorarioAlimentacion.executor&quot;: &quot;Run&quot;,\n    &quot;Application.MAIN.executor&quot;: &quot;Run&quot;,\n    &quot;Application.PoblacionBacterias.executor&quot;: &quot;Run&quot;,\n    &quot;Application.exp.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.project.maven.repository.indices&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"ExtractSuperBase.RECENT_KEYS\">\n      <recent name=\"EXPERIMENTO\" />\n    </key>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9f38398b9061-18abd8497189-intellij.indexing.shared.core-IU-241.14494.240\" />\n        <option value=\"bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-IU-241.14494.240\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"TaskManager\" summary=\"Task Manager\">\n      <created>1714750583890</created>\n      <option name=\"number\" value=\"TaskManager\" />\n      <option name=\"presentableId\" value=\"TaskManager\" />\n      <updated>1714750583890</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"sigue sin funcionar\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1714751381684</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1714751381684</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"ToolWindowManager\">\n    <frame x=\"0\" y=\"0\" width=\"1920\" height=\"1080\" extended-state=\"6\" />\n    <editor active=\"true\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" />\n    <layout>\n      <window_info id=\"Project\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$\" side-tool=\"false\" order=\"0\" />\n      <window_info id=\"Run\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"1\" />\n      <window_info id=\"Debug\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"2\" />\n      <window_info id=\"Terminal\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"3\" />\n      <window_info id=\"Version Control\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"4\" />\n      <window_info id=\"Maven\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"5\" />\n      <window_info id=\"Gradle\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"6\" />\n      <window_info id=\"Ant\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"7\" />\n      <window_info id=\"Maven Projects\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"8\" />\n      <window_info id=\"Database\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/ src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"9\" />\n      <window_info id=\"Services\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"10\" />\n      <window_info id=\"Event Log\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"11\" />\n      <window_info id=\"Structure\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"12\" />\n      <window_info id=\"Project\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$\" side-tool=\"false\" order=\"13\" />\n      <window_info id=\"Run\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"14\" />\n      <window_info id=\"Debug\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"15\" />\n      <window_info id=\"Terminal\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"16\" />\n      <window_info id=\"Version Control\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"17\" />\n      <window_info id=\"Maven\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"18\" />\n      <window_info id=\"Gradle\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"19\" />\n      <window_info id=\"Ant\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"20\" />\n      <window_info id=\"Maven Projects\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"21\" />\n      <window_info id=\"Database\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"22\" />\n      <window_info id=\"Services\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"23\" />\n      <window_info id=\"Event Log\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"24\" />\n      <window_info id=\"Structure\" active=\"true\" anchor=\"bottom\" file=\"file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java\" side-tool=\"false\" order=\"25\" />\n    </layout>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"mil fallos\" />\n    <MESSAGE value=\"sigue sin funcionar\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"sigue sin funcionar\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0fd76e139ec2a8d9681dbe30f2ff34a8b5353d70)
+++ b/.idea/workspace.xml	(date 1714824862872)
@@ -4,8 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="c976f18b-89ac-4b43-8fc8-42e3147c8413" name="Changes" comment="sigue sin funcionar">
-      <change afterPath="$PROJECT_DIR$/src/main/java/EXPERIMENTO/experimentos.java" afterDir="false" />
+    <list default="true" id="c976f18b-89ac-4b43-8fc8-42e3147c8413" name="Changes" comment="cambiando las clases a publico">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -105,27 +105,17 @@
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
-        <option value="bundled-jdk-9f38398b9061-18abd8497189-intellij.indexing.shared.core-IU-241.14494.240" />
-        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-IU-241.14494.240" />
+        <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-322ed176" />
       </set>
     </attachedChunks>
   </component>
   <component name="TaskManager">
     <task active="true" id="TaskManager" summary="Task Manager">
-      <created>1714750583890</created>
+      <created>1714752319157</created>
       <option name="number" value="TaskManager" />
       <option name="presentableId" value="TaskManager" />
-      <updated>1714750583890</updated>
-    </task>
-    <task id="LOCAL-00001" summary="sigue sin funcionar">
-      <option name="closed" value="true" />
-      <created>1714751381684</created>
-      <option name="number" value="00001" />
-      <option name="presentableId" value="LOCAL-00001" />
-      <option name="project" value="LOCAL" />
-      <updated>1714751381684</updated>
+      <updated>1714752319157</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="ToolWindowManager">
@@ -160,9 +150,4 @@
       <window_info id="Structure" active="true" anchor="bottom" file="file://$PROJECT_DIR$/src/main/java/EXPERIMENTO/MAIN.java" side-tool="false" order="25" />
     </layout>
   </component>
-  <component name="VcsManagerConfiguration">
-    <MESSAGE value="mil fallos" />
-    <MESSAGE value="sigue sin funcionar" />
-    <option name="LAST_COMMIT_MESSAGE" value="sigue sin funcionar" />
-  </component>
 </project>
\ No newline at end of file
